/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as Test2RouteImport } from './routes/test2'
import { Route as Test1RouteImport } from './routes/test1'
import { Route as SignUpRouteImport } from './routes/sign-up'
import { Route as SignInRouteImport } from './routes/sign-in'
import { Route as SearchRouteImport } from './routes/search'
import { Route as SaveRouteImport } from './routes/save'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as FeedRouteImport } from './routes/feed'
import { Route as DesignSystemRouteImport } from './routes/design-system'
import { Route as BookmarksRouteImport } from './routes/bookmarks'
import { Route as AccountsRouteImport } from './routes/accounts'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SubscriptionsIndexRouteImport } from './routes/subscriptions/index'
import { Route as FeedSubscriptionIdRouteImport } from './routes/feed/$subscriptionId'
import { Route as SubscriptionsDiscoverProviderRouteImport } from './routes/subscriptions/discover/$provider'

const Test2Route = Test2RouteImport.update({
  id: '/test2',
  path: '/test2',
  getParentRoute: () => rootRouteImport,
} as any)
const Test1Route = Test1RouteImport.update({
  id: '/test1',
  path: '/test1',
  getParentRoute: () => rootRouteImport,
} as any)
const SignUpRoute = SignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const SearchRoute = SearchRouteImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => rootRouteImport,
} as any)
const SaveRoute = SaveRouteImport.update({
  id: '/save',
  path: '/save',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const FeedRoute = FeedRouteImport.update({
  id: '/feed',
  path: '/feed',
  getParentRoute: () => rootRouteImport,
} as any)
const DesignSystemRoute = DesignSystemRouteImport.update({
  id: '/design-system',
  path: '/design-system',
  getParentRoute: () => rootRouteImport,
} as any)
const BookmarksRoute = BookmarksRouteImport.update({
  id: '/bookmarks',
  path: '/bookmarks',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountsRoute = AccountsRouteImport.update({
  id: '/accounts',
  path: '/accounts',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SubscriptionsIndexRoute = SubscriptionsIndexRouteImport.update({
  id: '/subscriptions/',
  path: '/subscriptions/',
  getParentRoute: () => rootRouteImport,
} as any)
const FeedSubscriptionIdRoute = FeedSubscriptionIdRouteImport.update({
  id: '/$subscriptionId',
  path: '/$subscriptionId',
  getParentRoute: () => FeedRoute,
} as any)
const SubscriptionsDiscoverProviderRoute =
  SubscriptionsDiscoverProviderRouteImport.update({
    id: '/subscriptions/discover/$provider',
    path: '/subscriptions/discover/$provider',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/accounts': typeof AccountsRoute
  '/bookmarks': typeof BookmarksRoute
  '/design-system': typeof DesignSystemRoute
  '/feed': typeof FeedRouteWithChildren
  '/profile': typeof ProfileRoute
  '/save': typeof SaveRoute
  '/search': typeof SearchRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/test1': typeof Test1Route
  '/test2': typeof Test2Route
  '/feed/$subscriptionId': typeof FeedSubscriptionIdRoute
  '/subscriptions': typeof SubscriptionsIndexRoute
  '/subscriptions/discover/$provider': typeof SubscriptionsDiscoverProviderRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/accounts': typeof AccountsRoute
  '/bookmarks': typeof BookmarksRoute
  '/design-system': typeof DesignSystemRoute
  '/feed': typeof FeedRouteWithChildren
  '/profile': typeof ProfileRoute
  '/save': typeof SaveRoute
  '/search': typeof SearchRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/test1': typeof Test1Route
  '/test2': typeof Test2Route
  '/feed/$subscriptionId': typeof FeedSubscriptionIdRoute
  '/subscriptions': typeof SubscriptionsIndexRoute
  '/subscriptions/discover/$provider': typeof SubscriptionsDiscoverProviderRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/accounts': typeof AccountsRoute
  '/bookmarks': typeof BookmarksRoute
  '/design-system': typeof DesignSystemRoute
  '/feed': typeof FeedRouteWithChildren
  '/profile': typeof ProfileRoute
  '/save': typeof SaveRoute
  '/search': typeof SearchRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/test1': typeof Test1Route
  '/test2': typeof Test2Route
  '/feed/$subscriptionId': typeof FeedSubscriptionIdRoute
  '/subscriptions/': typeof SubscriptionsIndexRoute
  '/subscriptions/discover/$provider': typeof SubscriptionsDiscoverProviderRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/accounts'
    | '/bookmarks'
    | '/design-system'
    | '/feed'
    | '/profile'
    | '/save'
    | '/search'
    | '/sign-in'
    | '/sign-up'
    | '/test1'
    | '/test2'
    | '/feed/$subscriptionId'
    | '/subscriptions'
    | '/subscriptions/discover/$provider'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/accounts'
    | '/bookmarks'
    | '/design-system'
    | '/feed'
    | '/profile'
    | '/save'
    | '/search'
    | '/sign-in'
    | '/sign-up'
    | '/test1'
    | '/test2'
    | '/feed/$subscriptionId'
    | '/subscriptions'
    | '/subscriptions/discover/$provider'
  id:
    | '__root__'
    | '/'
    | '/accounts'
    | '/bookmarks'
    | '/design-system'
    | '/feed'
    | '/profile'
    | '/save'
    | '/search'
    | '/sign-in'
    | '/sign-up'
    | '/test1'
    | '/test2'
    | '/feed/$subscriptionId'
    | '/subscriptions/'
    | '/subscriptions/discover/$provider'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AccountsRoute: typeof AccountsRoute
  BookmarksRoute: typeof BookmarksRoute
  DesignSystemRoute: typeof DesignSystemRoute
  FeedRoute: typeof FeedRouteWithChildren
  ProfileRoute: typeof ProfileRoute
  SaveRoute: typeof SaveRoute
  SearchRoute: typeof SearchRoute
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
  Test1Route: typeof Test1Route
  Test2Route: typeof Test2Route
  SubscriptionsIndexRoute: typeof SubscriptionsIndexRoute
  SubscriptionsDiscoverProviderRoute: typeof SubscriptionsDiscoverProviderRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/test2': {
      id: '/test2'
      path: '/test2'
      fullPath: '/test2'
      preLoaderRoute: typeof Test2RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/test1': {
      id: '/test1'
      path: '/test1'
      fullPath: '/test1'
      preLoaderRoute: typeof Test1RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/search': {
      id: '/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/save': {
      id: '/save'
      path: '/save'
      fullPath: '/save'
      preLoaderRoute: typeof SaveRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/feed': {
      id: '/feed'
      path: '/feed'
      fullPath: '/feed'
      preLoaderRoute: typeof FeedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/design-system': {
      id: '/design-system'
      path: '/design-system'
      fullPath: '/design-system'
      preLoaderRoute: typeof DesignSystemRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/bookmarks': {
      id: '/bookmarks'
      path: '/bookmarks'
      fullPath: '/bookmarks'
      preLoaderRoute: typeof BookmarksRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/accounts': {
      id: '/accounts'
      path: '/accounts'
      fullPath: '/accounts'
      preLoaderRoute: typeof AccountsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/subscriptions/': {
      id: '/subscriptions/'
      path: '/subscriptions'
      fullPath: '/subscriptions'
      preLoaderRoute: typeof SubscriptionsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/feed/$subscriptionId': {
      id: '/feed/$subscriptionId'
      path: '/$subscriptionId'
      fullPath: '/feed/$subscriptionId'
      preLoaderRoute: typeof FeedSubscriptionIdRouteImport
      parentRoute: typeof FeedRoute
    }
    '/subscriptions/discover/$provider': {
      id: '/subscriptions/discover/$provider'
      path: '/subscriptions/discover/$provider'
      fullPath: '/subscriptions/discover/$provider'
      preLoaderRoute: typeof SubscriptionsDiscoverProviderRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface FeedRouteChildren {
  FeedSubscriptionIdRoute: typeof FeedSubscriptionIdRoute
}

const FeedRouteChildren: FeedRouteChildren = {
  FeedSubscriptionIdRoute: FeedSubscriptionIdRoute,
}

const FeedRouteWithChildren = FeedRoute._addFileChildren(FeedRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AccountsRoute: AccountsRoute,
  BookmarksRoute: BookmarksRoute,
  DesignSystemRoute: DesignSystemRoute,
  FeedRoute: FeedRouteWithChildren,
  ProfileRoute: ProfileRoute,
  SaveRoute: SaveRoute,
  SearchRoute: SearchRoute,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
  Test1Route: Test1Route,
  Test2Route: Test2Route,
  SubscriptionsIndexRoute: SubscriptionsIndexRoute,
  SubscriptionsDiscoverProviderRoute: SubscriptionsDiscoverProviderRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
