name: Deploy to Cloudflare Workers

on:
  push:
    branches: [main]
    # paths:
    #   - 'packages/api/**'
    #   - 'packages/shared/**'
    #   - 'apps/web/**'
    #   - 'package.json'
    #   - 'bun.lockb'
    #   - '.github/workflows/deploy.yml'
  pull_request:
    branches: [main]
    # paths:
    #   - 'packages/api/**'
    #   - 'packages/shared/**'
    #   - 'apps/web/**'
    #   - 'package.json'
    #   - 'bun.lockb'
    #   - '.github/workflows/deploy.yml'

jobs:
  deploy-api:
    runs-on: ubuntu-latest
    name: Deploy API
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
          
      - name: Install dependencies
        run: bun install
        
      - name: Type check
        run: bun run type-check
        working-directory: packages/api
        
      - name: Build shared package
        run: bun run build
        working-directory: packages/shared
        
      - name: Build API
        run: bun run build
        working-directory: packages/api
        
      - name: Run database migrations (Production)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          workingDirectory: packages/api
          command: d1 migrations apply --env production --remote DB
          
      - name: Deploy to Production
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          workingDirectory: packages/api
          command: deploy --env production
        env:
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY_PRODUCTION }}
          
      - name: Deploy Preview
        if: github.event_name == 'pull_request'
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          workingDirectory: packages/api
          command: deploy --name zine-api-${{ github.head_ref }}
        env:
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY_DEV }}
        id: preview_deploy
        
      - name: Comment Preview URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const deploymentUrl = `https://zine-api-${{ github.head_ref }}.${{ secrets.CLOUDFLARE_ACCOUNT_ID }}.workers.dev`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üöÄ **API Preview Deployment Ready!**
              
              **Preview URL:** ${deploymentUrl}
              **Branch:** \`${{ github.head_ref }}\`
              **Commit:** \`${{ github.sha }}\`
              
              Test your API endpoints at: ${deploymentUrl}/api/v1/`
            })
            
  deploy-web:
    runs-on: ubuntu-latest
    name: Deploy Web App
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
          
      - name: Install dependencies
        run: bun install
        
      - name: Type check
        run: bun run type-check
        working-directory: apps/web
        
      - name: Build shared package
        run: bun run build
        working-directory: packages/shared
        
      - name: Build Web App (Production)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          echo "Building with env vars:"
          echo "VITE_CLERK_PUBLISHABLE_KEY_PRODUCTION is set: $([[ -n "$VITE_CLERK_PUBLISHABLE_KEY_PRODUCTION" ]] && echo "YES" || echo "NO")"
          echo "VITE_TEST_VAR is set: $([[ -n "$VITE_TEST_VAR" ]] && echo "YES" || echo "NO")"
          echo "Building with explicit env vars..."
          VITE_CLERK_PUBLISHABLE_KEY_PRODUCTION="$VITE_CLERK_PUBLISHABLE_KEY_PRODUCTION" VITE_TEST_VAR="$VITE_TEST_VAR" bun run build
        working-directory: apps/web
        env:
          VITE_CLERK_PUBLISHABLE_KEY_PRODUCTION: ${{ secrets.VITE_CLERK_PUBLISHABLE_KEY_PRODUCTION }}
          VITE_TEST_VAR: "test-value-production"
          
      - name: Build Web App (Preview)
        if: github.event_name == 'pull_request'
        run: bun run build
        working-directory: apps/web
        env:
          VITE_CLERK_PUBLISHABLE_KEY_DEV: ${{ secrets.VITE_CLERK_PUBLISHABLE_KEY_DEV }}
        
      - name: Deploy to Production
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          workingDirectory: apps/web
          command: deploy --env production
          
      - name: Deploy Preview
        if: github.event_name == 'pull_request'
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          workingDirectory: apps/web
          command: deploy --name zine-web-${{ github.head_ref }}
        id: web_preview_deploy
        
      - name: Comment Preview URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const deploymentUrl = `https://zine-web-${{ github.head_ref }}.${{ secrets.CLOUDFLARE_ACCOUNT_ID }}.workers.dev`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üåê **Web App Preview Deployment Ready!**
              
              **Preview URL:** ${deploymentUrl}
              **Branch:** \`${{ github.head_ref }}\`
              **Commit:** \`${{ github.sha }}\`
              
              View your web app at: ${deploymentUrl}`
            })