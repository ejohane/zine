name: Deploy Web App to Cloudflare Pages

on:
  push:
    branches:
      - main
    # Temporarily removed paths filter for testing
    # paths:
    #   - 'apps/web/**'
    #   - 'packages/shared/**'
    #   - 'package.json'
    #   - 'bun.lockb'
    #   - 'turbo.json'
  pull_request:
    branches:
      - main
    # Temporarily removed paths filter for testing
    # paths:
    #   - 'apps/web/**'
    #   - 'packages/shared/**'
    #   - 'package.json'
    #   - 'bun.lockb'
    #   - 'turbo.json'

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Cloudflare Pages
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Type check
        run: bun type-check --filter=@zine/web

      - name: Lint
        run: bun lint --filter=@zine/web

      - name: Build web app
        run: bun build --filter=@zine/web

      - name: Deploy to Cloudflare Pages (Production)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy apps/web/dist --project-name=zine-web --env=production

      - name: Deploy to Cloudflare Pages (Preview)
        if: github.event_name == 'pull_request'
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy apps/web/dist --project-name=zine-web

      - name: Comment PR with Preview URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const { data: deployments } = await github.rest.repos.listDeployments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.payload.pull_request.head.sha,
              environment: 'preview'
            });
            
            if (deployments.length > 0) {
              const previewUrl = `https://${context.payload.pull_request.head.sha.substring(0, 8)}.zine-web.pages.dev`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `ðŸš€ **Preview deployment is ready!**\n\nðŸ“± **Preview URL:** ${previewUrl}\n\n*Deployment will be available in a few moments.*`
              });
            }